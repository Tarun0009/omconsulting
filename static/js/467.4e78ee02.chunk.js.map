{"version":3,"file":"static/js/467.4e78ee02.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","../node_modules/motion-dom/dist/es/animation/controls/Group.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","../node_modules/motion-dom/dist/es/frameloop/order.mjs","../node_modules/motion-dom/dist/es/stats/buffer.mjs","../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/capture-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/motion-dom/dist/es/stats/animation-count.mjs","../node_modules/motion-dom/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/measure.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/framer-motion/dist/es/render/html/utils/parse-transform.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/motion-utils/dist/es/array.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/motion-utils/dist/es/global-config.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-utils/dist/es/subscription-manager.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../node_modules/motion-utils/dist/es/warn-once.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs"],"sourcesContent":["import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","function capturePointer(event, action) {\n    const actionName = `${action}PointerCapture`;\n    if (event.target instanceof Element &&\n        actionName in event.target &&\n        event.pointerId !== undefined) {\n        try {\n            event.target[actionName](event.pointerId);\n        }\n        catch (e) { }\n    }\n}\n\nexport { capturePointer };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { capturePointer } from '../utils/capture-pointer.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!target || !isValidPressEvent(startEvent) || isPressing.has(target))\n            return;\n        isPressing.add(target);\n        capturePointer(startEvent, \"set\");\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            target.removeEventListener(\"pointerup\", onPointerUp);\n            target.removeEventListener(\"pointercancel\", onPointerCancel);\n            capturePointer(endEvent, \"release\");\n            if (!isValidPressEvent(endEvent) || !isPressing.has(target)) {\n                return;\n            }\n            isPressing.delete(target);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            const isOutside = !upEvent.isTrusted\n                ? false\n                : checkOutside(upEvent, target instanceof Element\n                    ? target.getBoundingClientRect()\n                    : {\n                        left: 0,\n                        top: 0,\n                        right: window.innerWidth,\n                        bottom: window.innerHeight,\n                    });\n            if (isOutside) {\n                onPointerEnd(upEvent, false);\n            }\n            else {\n                onPointerEnd(upEvent, !(target instanceof Element) ||\n                    isNodeOrChild(target, upEvent.target));\n            }\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        target.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        target.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n        target.addEventListener(\"lostpointercapture\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        target = options.useGlobalTarget ? window : target;\n        let canAddKeyboardAccessibility = false;\n        if (target instanceof HTMLElement) {\n            canAddKeyboardAccessibility = true;\n            if (!isElementKeyboardAccessible(target) &&\n                target.getAttribute(\"tabindex\") === null) {\n                target.tabIndex = 0;\n            }\n        }\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (canAddKeyboardAccessibility) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n        }\n    });\n    return cancelEvents;\n}\nfunction checkOutside(event, rect) {\n    return (event.clientX < rect.left ||\n        event.clientX > rect.right ||\n        event.clientY < rect.top ||\n        event.clientY > rect.bottom);\n}\n\nexport { press };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { frame } from '../frameloop/frame.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.5.0\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from 'motion-dom';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        if (!this.options.allowFlatten)\n            return;\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { frame, cancelFrame, frameData, time } from 'motion-dom';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration, activeAnimations } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        activeAnimations.mainThread++;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing, statsBuffer, activeAnimations } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const animation = element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { motionValue } from 'motion-dom';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { warnOnce } from 'motion-utils';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, setDragLock } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from '../../render/dom/utils/is-css-variable.mjs';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, frame, activeAnimations } from 'motion-dom';\nimport { SubscriptionManager, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from 'motion-dom';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\n\nexport { updateSVGDimensions };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from 'motion-dom';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time, frame, cancelFrame, motionValue } from 'motion-dom';\nimport { warnOnce, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { motionValue } from 'motion-dom';\nimport { warnOnce } from 'motion-utils';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.5.0\", `Attempting to mix Motion versions ${nextValue.version} with 12.5.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { readTransformValue } from './utils/parse-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { frame } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n        this.updateDimensions = () => {\n            if (this.current && !this.renderState.dimensions) {\n                updateSVGDimensions(this.current, this.renderState);\n            }\n        };\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    onBindTransform() {\n        if (this.current && !this.renderState.dimensions) {\n            frame.postRender(this.updateDimensions);\n        }\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { parseValueFromTransform, readTransformValue };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { parseValueFromTransform } from '../../html/utils/parse-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { getValueTransition, frame } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","const warned = new Set();\nfunction hasWarned(message) {\n    return warned.has(message);\n}\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { hasWarned, warnOnce };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { frame } from 'motion-dom';\nimport { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n"],"names":["resolveVariant","visualElement","definition","custom","props","getProps","resolveVariantFromProps","undefined","useIsomorphicLayoutEffect","isBrowser","useLayoutEffect","useEffect","supportsScrollTimeline","memo","window","ScrollTimeline","BaseGroupPlaybackControls","constructor","animations","this","stop","runAll","filter","Boolean","finished","Promise","all","map","animation","getAll","propName","setAll","newValue","i","length","attachTimeline","timeline","fallback","subscriptions","forEach","cancel","time","speed","startTime","duration","max","Math","methodName","controls","flatten","play","pause","complete","GroupPlaybackControls","then","onResolve","onReject","catch","getValueTransition","transition","key","maxGeneratorDuration","calcGeneratorDuration","generator","state","next","done","Infinity","isGenerator","type","onfinish","isBezierDefinition","easing","Array","isArray","supportsFlags","linearEasing","memoSupports","callback","supportsFlag","memoized","_a","supportsLinearEasing","document","createElement","animate","opacity","e","generateLinearEasing","resolution","arguments","points","numPoints","round","progress","substring","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_ref","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","segmentEasing","stepsOrder","statsBuffer","value","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","has","step","schedule","queue","add","delete","process","frameData","frameloop","push","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","MotionGlobalConfig","useManualTiming","performance","now","min","keepAlive","immediate","frame","cancelFrame","frameSteps","requestAnimationFrame","noop","microtask","cancelMicrotask","queueMicrotask","clearTime","set","newTime","isDragging","x","y","isDragActive","setDragLock","axis","setupGesture","elementOrSelector","options","elements","scope","selectorCache","EventTarget","root","current","querySelectorAll","from","resolveElements","gestureAbortController","AbortController","passive","signal","abort","isValidHover","event","pointerType","hover","onHoverStart","eventOptions","onPointerEnter","enterEvent","target","onHoverEnd","onPointerLeave","leaveEvent","removeEventListener","addEventListener","element","capturePointer","action","actionName","Element","pointerId","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","enableKeyboardPress","focusEvent","currentTarget","handleKeydown","handleKeyup","handleBlur","isValidPressEvent","press","targetOrSelector","onPressStart","targets","cancelEvents","startPress","startEvent","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","isOutside","isTrusted","rect","getBoundingClientRect","left","top","right","innerWidth","bottom","innerHeight","clientX","clientY","cancelEvent","canAddKeyboardAccessibility","useGlobalTarget","HTMLElement","tagName","tabIndex","getAttribute","activeAnimations","layout","mainThread","waapi","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","v","currentTime","updatedAt","setPrevFrameValue","prev","setCurrent","change","notify","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","SubscriptionManager","unsubscribe","getSize","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","get","getPrevious","getVelocity","velocityPerSecond","start","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","combineFunctions","pipe","_len","transformers","_key","optimizedAppearDataAttribute","camelToDash","isKeyframesTarget","str","replace","toLowerCase","dimensionValueTypes","number","px","percent","degrees","vw","vh","test","parse","findDimensionValueType","find","testValueType","invalidTemplates","splitCSSVariableRegex","getVariableValue","depth","invariant","token","match","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","trim","isNumericalString","isCSSVariableToken","DOMKeyframesResolver","KeyframeResolver","unresolvedKeyframes","onComplete","name","super","readKeyframes","keyframe","finalKeyframe","resolveNoneKeyframes","positionalKeys","origin","originType","targetType","isNumOrPxType","needsMeasurement","noneKeyframeIndexes","isZeroValueString","animatableTemplate","analyseComplexValue","values","noneIndex","getAnimatableNone","makeNoneKeyframesAnimatable","measureInitialState","suspendedScrollY","pageYOffset","measuredOrigin","positionalValues","measureViewportBox","measureKeyframe","getValue","measureEndState","finalKeyframeIndex","removedTransforms","unsetTransformName","unsetTransformValue","isMotionValue","instantAnimationState","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","reverseEasing","backInOut","mirrorEasing","anticipate","p","pow","isAnimatable","complex","startsWith","isNotNull","getFinalKeyframe","keyframes","repeat","repeatType","resolvedKeyframes","index","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","flushKeyframeResolvers","onKeyframesResolved","velocity","onUpdate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","warning","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","allowFlatten","hueToRgb","q","mixImmediate","mixLinearColor","to","fromExpo","expo","sqrt","colorTypes","hex","rgba","hsla","asRGBA","color","model","hue","saturation","lightness","alpha","red","green","blue","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixNumber","transform","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","output","numValues","blendValue","template","createTransformer","originStats","targetStats","indexes","var","mixVisibility","orderedOrigin","pointers","types","originIndex","originValue","matchOrder","mix","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","default","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","secondsToMilliseconds","dampingRatio","clamp","millisecondsToSeconds","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","g","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toString","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easingLookup","circInOut","easingDefinitionToFunction","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","resolver","teardown","onStop","KeyframeResolver$1","onResolved","scheduleResolve","Object","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","isScheduled","resume","onPlay","stopDriver","acceleratedValues","supportsWaapi","hasOwnProperty","call","prototype","unsupportedEasingFunctions","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","fill","iterations","direction","finally","startWaapiAnimation","pendingTimeline","playbackRate","playState","sampleTime","supports","transformTemplate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","transformProps","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","isColorString","splitColor","alpha$1","sanitize","createUnitType","unit","endsWith","split","progressPercentage","setMotionValue","hasValue","addValue","setTarget","transitionEnd","resolveFinalValueInKeyframes","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","originalValue","parsedValue","parseComplexValue","source","numSections","convertNumbersToZero","_b","floatRegex","parsed","transformer","defaultValueType","getDefaultValueType","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","_target","isAnimationControls","shallowCompare","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","context","initial","prop","reversePriorityOrder","numAnimationTypes","createAnimationState","animateVisualElement","animateList","createState","isInitialRender","buildResolvedTypeValues","presenceContext","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","protectedKeys","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","needsAnimating","liveStyle","valueHasChanged","blockInitialAnimation","size","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","variantChildren","animationState","setAnimateFunction","makeAnimator","getState","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","addDomEvent","handler","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","calcLength","calcAxisDelta","originPoint","scale","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","createBox","eachAxis","isIdentityScale","hasScale","scaleX","scaleY","hasTransform","has2DTranslate","z","rotate","rotateX","rotateY","skewX","skewY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","isRefObject","ref","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","addValueToWillChange","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","_ref2","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","PresenceContext","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariableName","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useCallback","usePresence","jsx","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","compareByDepth","FlatTree","children","isDirty","addUniqueItem","removeItem","sort","timeout","checkElapsed","resolveMotionValue","unwrappedValue","isCustomValue","toValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","latestValues","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","appearId","getOptimisedAppearId","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","shouldReduceMotion","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","rotateZ","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","renderState","vars","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","LazyContext","strict","MotionConfigContext","isStatic","reducedMotion","MotionContext","isVariantNode","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","join","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","onMount","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","isForcedMotionValue","getValueAsType","translateAlias","numTransforms","transformPropOrder","buildHTMLStyles","hasTransformOrigin","valueAsType","numberValueTypes","transformString","transformIsDefault","valueIsDefault","buildTransform","originZ","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","lowercaseSVGElements","isSVGComponent","indexOf","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","width","height","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","valueTarget","newValues","htmlMotionConfig","updateSVGDimensions","getBBox","renderHTML","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","scrapeMotionValuesFromProps$1","charAt","layoutProps","svgMotionConfig","needsMeasure","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","willChange","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","sortNodePosition","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","defaultValue","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","variant","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","readTransformValue","computedStyle","SVGVisualElement","updateDimensions","defaultType","motion","createDomVisualElement","radToDeg","rad","angle","atan2","rebaseAngle","matrix2dParsers","translateX","translateY","atan","skew","matrix3dParsers","translateZ","defaultTransformValue","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","acos","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","paddingLeft","paddingRight","_ref3","_ref4","paddingTop","paddingBottom","_bbox","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","r","parseInt","singleColorRegex","testProp","isNullish","aName","bName","cName","shouldBlockAnimation","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animationTypeState","MotionHandoffAnimation","animateVariant","getAnimation","getChildAnimations","forwardDelay","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","resolvedDefinition","checkStringStartsWith","startsAsVariableToken","singleCssVariableRegex","maxDefaults","applyDefaultFilter","slice","functionRegex","functions","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","scaleZ","perspective","int","zIndex","fillOpacity","strokeOpacity","numOctaves","item","any","toFromDifference","numSubscriptions","seconds","milliseconds","frameDuration","getValueState","rgbUnit","clampRgbUnit","toResolve","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","elementsToMeasure","transformsToRestore","restore","scrollTo","readAllKeyframes","isAsync","isComplete","currentValue","valueAsRead","setFinalKeyframe","renderEndStyles"],"sourceRoot":""}